    @org.testng.annotations.Test(invocationCount = 10)
    static void [[TEST]]Masked$vectorteststype$() {
        $type$[] a = new $type$[SIZE];
        $type$[] rT = new $type$[SIZE];
        $type$[] rF = new $type$[SIZE];
        $type$[] rM = new $type$[SIZE];
        boolean[] mask = new boolean[species.length()];
        
        // Data Initialization.
        init_mask(mask, species.length());
        init_arr1(a);

        Vector.Mask<$Wideboxtype$, Shapes.S$bits$Bit> pMask = species.constantMask(mask);
        Vector.Mask<$Wideboxtype$, Shapes.S$bits$Bit> tMask = species.trueMask();
        Vector.Mask<$Wideboxtype$, Shapes.S$bits$Bit> fMask = species.falseMask();

        // Computation.
        for (int i = 0; i < a.length; i += species.length()) {
            $abstractvectortype$<Shapes.S$bits$Bit> av = species.fromArray(a, i);
            av.[[TEST]](tMask).intoArray(rT, i);
            av.[[TEST]](fMask).intoArray(rF, i);
            av.[[TEST]](pMask).intoArray(rM, i);
        }

        assertArraysEquals(a, rT, tMask.toArray(), $vectorteststype$::[[TEST]]);
        assertArraysEquals(a, rF, fMask.toArray(), $vectorteststype$::[[TEST]]);
        assertArraysEquals(a, rM, mask, $vectorteststype$::[[TEST]]);
    }

