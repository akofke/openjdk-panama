#
#  Copyright (c) 2017, Oracle and/or its affiliates. All rights reserved.
#  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
# 
#  This code is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License version 2 only, as
#  published by the Free Software Foundation.
# 
#  This code is distributed in the hope that it will be useful, but WITHOUT
#  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#  version 2 for more details (a copy is included in the LICENSE file that
#  accompanied this code).
# 
#  You should have received a copy of the GNU General Public License version
#  2 along with this work; if not, write to the Free Software Foundation,
#  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
# 
#  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
#  or visit www.oracle.com if you need additional information or have any
#  questions.
#

# error messages
cannot.read.header.file=Cannot open header file: {0}
cannot.write.jar.file=Cannot write jar file: {0}, cause: {1}
cannot.write.jmod.file=Cannot write jmod file: {0}, cause: {1}
cannot.write.class.file=Cannot write class file {0}, cause: {1}
not.a.directory=Not a directory: {0}
l.name.should.not.be.path=-l option value should not be a path: {0}
include.symbols.pattern.error=--include-symbols pattern is wrong: {0}
exclude.symbols.pattern.error=--exclude-symbols pattern is wrong: {0}
err.no.input.files=No input files
err.symbol.not.found=ERROR: symbol {0} is not found in any library
invalid.missing_symbols.option.value=Invalid --missing-symbols option value: {0}

# warning messages
warn.record_library_path.without.l=WARNING: --record-library-path option specified without any -l option
warn.record_library_path.without.L=WARNING: --record-library-path option specified without any -L option
warn.L.without.l=WARNING: -L option specified without any -l option
warn.l.without.L=WARNING: -l option specified without any -L option
warn.using.java.library.path=WARNING: using java.library.path for library search path
warn.missing_symbols.without.l=WARNING: --missing-symbols specified without any -l option
warn.lib.not.found=WARNING: Some library names could not be resolved
warn.symbol.excluded=WARNING: symbol {0} is not found in any library, excluding it
warn.class.overwritten=WARNING: class {0} definition is overwritten
warn.no.output=WARNING: nothing to generate

# help messages for options
help.C=pass through argument for clang
help.I=specify include files path
help.L=specify library path
help.d=specify where to place generated class files
help.dry_run=parse header files but do not generate output jar
help.exclude_symbols=exclude the native symbols matching the given pattern
help.h=print help
help.include_symbols=include the native symbols matching the given pattern. \
   If both --include-symbols and --exclude-symbols are specified, --include-symbols \
   are considered first.
help.l=specify a library
help.log=specify log level in java.util.logging.Level name
help.m=specify package mapping as dir=pkg
help.missing_symbols=action on missing native symbols. \
   --missing_symbols=error|exclude|ignore|warn
help.no.locations=do not generate native location information in the .class files
help.o=specify output jar file or jmod file
help.record_library_path=tells whether to record library search path in the .class files
help.static_forwarder=generate static forwarder class (default is true)
help.t=target package for specified header files

help.non.option=header files
